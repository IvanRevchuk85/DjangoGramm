import logging
from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth import authenticate, login
from django.core.mail import send_mail
from django.contrib.sites.shortcuts import get_current_site
from django.urls import reverse
from django.contrib.auth.decorators import login_required
from django.conf import settings
from django.contrib import messages
from django.http import HttpResponse, JsonResponse
from django.views import View
from .forms import CustomUserCreationForm, EditProfileForm
from .models import CustomUser, Follow
from django.views.decorators.csrf import csrf_exempt
from django.utils.decorators import method_decorator

logger = logging.getLogger(__name__)

def home(request):
    return render(request, 'home.html')


def register(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            user.is_active = False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            user.save()

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –ø–∏—Å—å–º–∞
            current_site = get_current_site(request)
            subject = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
            message = f'''
            –ü—Ä–∏–≤–µ—Ç, {user.username}!
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ:
            http://{current_site.domain}{reverse('users:confirm_email', kwargs={'user_id': user.id})}
            '''
            send_mail(subject, message, settings.EMAIL_HOST_USER,
                      [user.email], fail_silently=False)
            return redirect('users:registration_pending')
    else:
        form = CustomUserCreationForm()

    return render(request, 'users/register.html', {'form': form})

def confirm_email(request, user_id):
    user = get_object_or_404(CustomUser, id=user_id)
    if not user.is_email_verified:
        user.is_email_verified = True
        user.is_active = True
        user.save()
        messages.success(
            request, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.")
        return redirect('users:login')
    else:
        messages.warning(request, "–í–∞—à email —É–∂–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.")
        return redirect('users:login')

def login_view(request):
    if request.method == 'POST':
        username = request.POST.get('username', '').strip()
        password = request.POST.get('password', '').strip()

        if not username or not password:
            messages.error(request, "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")
        else:
            user = authenticate(request, username=username, password=password)
            if user is not None:
                login(request, user)
                return redirect('users:profile')
            else:
                messages.error(request, "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.")

    return render(request, 'users/login.html')

@login_required
def profile(request):
    return render(request, 'users/profile.html')

@login_required
def edit_profile(request):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    user = request.user

    if request.method == 'POST':
        form = EditProfileForm(request.POST, request.FILES, instance=user)
        if form.is_valid():
            form.save()
            messages.success(request, "–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
            return redirect('users:profile')

    else:
        form = EditProfileForm(instance=user)

    return render(request, 'users/edit_profile.html', {'form': form})

@method_decorator(login_required, name='dispatch')
class FollowUserView(View):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    def post(self, request, user_id):
        print(f"üîµ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –æ—Ç {request.user} –Ω–∞ {user_id}")
        print(f"üì© –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {request.POST}")

        follower = request.user
        following = get_object_or_404(CustomUser, id=user_id)

        if follower == following:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {follower} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è.")
            return JsonResponse({"error": "–ù–µ–ª—å–∑—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è"}, status=400)

        follow, created = Follow.objects.get_or_create(follower=follower, following=following)

        if created:
            
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {follower} -> {following}")
        else:
            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –±—ã–ª–∞, —É–¥–∞–ª—è–µ–º –µ–µ (—Ç–æ –µ—Å—Ç—å —ç—Ç–æ "–æ—Ç–ø–∏—Å–∫–∞")
            follow.delete()
            print(f"‚ùå –û—Ç–ø–∏—Å–∫–∞: {follower} -> {following}")
            followers_count = Follow.objects.filter(following=following).count()
            return JsonResponse({"message": f"–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç {following.username}", "followers_count": followers_count}, status=200)
        # –û–±–Ω–æ–≤–ª—è–µ–º —á–∏—Å–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        followers_count = Follow.objects.filter(following=following).count()

        return JsonResponse({"message": f"–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {following.username}", "followers_count": followers_count}, status=201)


@login_required
def check_follow_status(request, user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_to_check = get_object_or_404(CustomUser, id=user_id)
    is_following = Follow.objects.filter(follower=request.user, following=user_to_check).exists()
    return JsonResponse({"is_following": is_following})



@method_decorator(login_required, name='dispatch')
class UnfollowUserView(View):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    def post(self, request, user_id):
        print(f"üî¥ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø–∏—Å–∫—É –æ—Ç {request.user} –æ—Ç {user_id}")

        follower = request.user
        following = get_object_or_404(CustomUser, id=user_id)

        follow = Follow.objects.filter(follower=follower, following=following).first()

        if not follow:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {follower} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ {following}")
            return JsonResponse({"error": "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"}, status=400)

        follow.delete()
        print(f"‚ùå –û—Ç–ø–∏—Å–∫–∞: {follower} -> {following}")

        followers_count = Follow.objects.filter(following=following).count()
        return JsonResponse({"message": f"–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç {following.username}", "followers_count": followers_count}, status=200)
